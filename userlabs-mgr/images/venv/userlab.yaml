apiVersion: v1
kind: PersistentVolume
metadata:
  name: software-_userid_-_id_
spec:
  capacity:
    storage: 48Gi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: userlabs
    name: software-_userid_-_id_
  nfs:
    server: _software_server_
    path: "_software_path_"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: software-_userid_-_id_
  namespace: userlabs
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 48Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: userdata-_userid_-_id_
spec:
  capacity:
    storage: _storage_userdata_
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: userlabs
    name: userdata-_userid_-_id_
  nfs:
    server: _userdata_server_
    path: "_userdata_path_/_userid_"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userdata-_userid_-_id_
  namespace: userlabs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: _storage_userdata_
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: userlab-job-_userid_-_id_
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: userlabs
    name: userlab-job-_userid_-_id_
  nfs:
    server: _manager_jobs_server_
    path: "_manager_jobs_path_/_id_/bin"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userlab-job-_userid_-_id_
  namespace: userlabs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: _service-name_
  namespace: userlabs
spec:
  selector:
    app: jupyterlab-_id_
  ports:
    - name: http
      protocol: TCP
      port: _port_
      targetPort: _port_
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: userlabs
  name: jupyterlab-_id_-deployment
  labels:
    app: jupyterlab-_id_
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterlab-_id_
  template:
    metadata:
      labels:
        app: jupyterlab-_id_
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: jupyterlab-_id_
        image: jupyterjsc/easybuild-jovyan:0.4.8
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-c", "/opt/apps/bin/bin/umount-judac; /opt/apps/bin/bin/umount-B2DROP;"]
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        command: ["/bin/bash", "/opt/apps/bin/start.sh"]
        ports:
        - containerPort: _port_
        resources:
          limits:
            # memory: "_resource_limit_memory_"
            # cpu: "_resource_limit_cpu_"
            ephemeral-storage: "_resource_limit_storage_"
        env:
        - name: JUPYTERHUB_CANCEL_URL
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_CANCEL_URL
        - name: JUPYTERHUB_API_URL
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_API_URL
        - name: JUPYTERHUB_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_CLIENT_ID
        - name: JUPYTERHUB_USER
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_USER
        - name: JUPYTERHUB_SERVICE_PREFIX
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_SERVICE_PREFIX
        - name: JUPYTERHUB_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_BASE_URL
        - name: SERVERNAMESHORT
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: SERVERNAMESHORT
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: SERVICE_NAME
        - name: REMOTE_NODE
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: REMOTE_NODE
        - name: REMOTE_HUB_PORT
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: REMOTE_HUB_PORT
        - name: STARTUUIDCODE
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: STARTUUIDCODE
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: PORT
        - name: JUPYTERHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: userlab-_id_-secret
              key: JUPYTERHUB_API_TOKEN
        volumeMounts:
          - name: easybuild
            mountPath: "/p/software/hdfcloud/"
          - name: userhome
            mountPath: "/home/jovyan"
          - name: startdir
            mountPath: "/opt/apps/bin"
      securityContext:
        fsGroup: 100
      volumes:
      - name: easybuild
        persistentVolumeClaim:
          claimName: software-_userid_-_id_
      - name: userhome
        persistentVolumeClaim:
          claimName: userdata-_userid_-_id_
      - name: startdir
        persistentVolumeClaim:
          claimName: userlab-job-_userid_-_id_
