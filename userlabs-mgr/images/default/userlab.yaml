apiVersion: v1
kind: PersistentVolume
metadata:
  name: easybuild-_username_-_id_
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadOnly
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: easybuild-_username_-_id_
  nfs:
    server: 10.0.25.222
    path: "/srv/nfs/easybuild"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: easybuild-_username_-_id_
spec:
  accessModes:
    - ReadOnly
  storageClassName: ""
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: userhome-_username_-_id_
spec:
  capacity:
    storage: _storage_userhome_-_id_
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: userhome-_username_-_id_
  nfs:
    server: 10.0.25.222
    path: "/srv/nfs/userlabs/userhomes/_username_"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userhome-_username_-_id_
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: _storage_userhome_
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: userlab-_username_-_id_
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: userlab-_username_-_id_
  nfs:
    server: 10.0.25.222
    path: "/srv/nfs/userlabs/jobs/_id_/bin"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: userlab-_username_-_id_
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: JupyterLab-_id_-deployment
  labels:
    app: JupyterLab-_id_
  namespace: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: JupyterLab-_id_
  template:
    metadata:
      labels:
        app: JupyterLab-_id_
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: JupyterLab-_id_
        image: jupyterjsc/easybuild-jovyan:0.1
        imagePullPolicy: Always
        command: ["/opt/apps/bin/start.sh"]
        arguments: []
        ports:
        - containerPort: _port_
        resources:
          limits:
            memory: "_resource_limit_memory_"
            cpu: "_resource_limit_cpu_"
            ephemeral-storage: "_resource_limit_storage_"
        env:
        - name: JUPYTERHUB_API_URL
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_API_URL
        - name: JUPYTERHUB_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_CLIENT_ID
        - name: JUPYTERHUB_USER
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_USER
        - name: JUPYTERHUB_SERVICE_PREFIX
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_SERVICE_PREFIX
        - name: JUPYTERHUB_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: userlab-_id_-cm
              key: JUPYTERHUB_BASE_URL
        - name: JUPYTERHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: userlab-_id_-secret
              key: JUPYTERHUB_API_TOKEN
        volumeMounts:
          - name: easybuild
            mountPath: "/opt/apps/easybuild"
          - name: userhome
            mountPath: "/home/jovyan"
          - name: startdir
            mountPath: "/opt/apps/bin"
      volumes:
      - name: easybuild
        persistentVolumeClaim:
          claimName: easybuild-_username_-_id_
      - name: userhome
        persistentVolumeClaim:
          claimName: userhome-_username_-_id_
      - name: startdir
        persistentVolumeClaim:
          claimName: userlab-_username_-_id_
