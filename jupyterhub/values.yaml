cull:
  enabled: true
  users: false
  removeNamedServers: false
  timeout: 86400
  every: 600
  concurrency: 5
  maxAge: 0

hub:
  command:
  - jupyterhub
  config:
    JupyterHub:
      cleanup_proxy: false
      data_files_path: /mnt/config/jupyterhub/config/data
      default_url: /hub/home
      hub_ip: 0.0.0.0
      hub_port: 8000
      init_spawners_timeout: 2
      jinja_environment_options:
        extensions:
        - jinja2.ext.do
        - jinja2.ext.loopcontrols
      last_activity_interval: 60
      logout_on_all_devices: false
      logout_on_all_devices_argname: alldevices
      shutdown_on_logout: true
      strict_session_ids: true
      statsd_host: graphite
  containerSecurityContext:
    runAsUser: 1091
  db:
    type: postgres
  extraConfig:
    myConfig: |
      extensions_path = "/mnt/config/jupyterhub/extensions"
      sys.path.insert(1, extensions_path)

      db_host = os.environ.get("JUPYTERHUB_DB_HOST")
      db_port = os.environ.get("JUPYTERHUB_DB_PORT")
      db_user = os.environ.get("JUPYTERHUB_DB_USER")
      db_password = os.environ.get("JUPYTERHUB_DB_PASSWD")
      db_database = os.environ.get("JUPYTERHUB_DB_DATABASE")
      c.JupyterHub.db_url = f"postgresql://{db_user}:{db_password}@{db_host}:{db_port}/{db_database}"
      from authenticator import unity
      from backendspawner import functions
      from jupyterhub.spawner import BackendSpawner
      from extra_logs.extra_handlers import create_extra_handlers

      # c.JupyterHub.statsd_host = "graphite"
      c.JupyterHub.log_level = 10
      c.JupyterHub.extra_log_handlers = create_extra_handlers()

      c.JupyterHub.allow_named_servers = True
      c.JupyterHub.spawner_class = BackendSpawner

      c.BackendSpawner.backend_url = "http://backend:8080/api/job"

      c.BackendSpawner.http_timeout = 43200
      c.BackendSpawner.poll_interval = 20
      c.BackendSpawner.poll_interval_random_max = 20
      c.BackendSpawner.cancel_progress_activation = 25

      c.BackendSpawner.options_from_query = functions.options_from_query
      c.BackendSpawner.options_from_form = functions.options_from_form
      c.BackendSpawner.options_form = functions.options_form


      c.JupyterHub.tornado_settings = {"slow_spawn_timeout": 0, "version_hash": ""}

      c.JupyterHub.cookie_secret_file = "/mnt/common/jupyterhub/cookie_secret_file"

      c.JupyterHub.authenticator_class = unity.UnityOAuthenticator
      c.UnityOAuthenticator.extra_params_allowed_runtime = {
          "uy_select_authn": ["jupyterhdfaaiAuthn.hdf", "jupyterldapAuthn.password", "jupyterhdfaaiAuthn.hbp"]
      }
      c.UnityOAuthenticator.enable_auth_state = True
      c.UnityOAuthenticator.client_id = "jupyter-jsc.fz-juelich.de"
      c.UnityOAuthenticator.oauth_callback_url = "https://jupyter-jsc.fz-juelich.de/hub/oauth_callback"
      #c.UnityOAuthenticator.oauth_callback_url = "https://jupyter-jsc-devel.fz-juelich.de/hub/oauth_callback"
      #c.UnityOAuthenticator.oauth_callback_url = "https://_host_/hub/oauth_callback"
      c.UnityOAuthenticator.authorize_url = "https://unity-jsc.fz-juelich.de/jupyter-oauth2-as/oauth2-authz"
      c.UnityOAuthenticator.token_url = "https://unity-jsc.fz-juelich.de/jupyter-oauth2/token"
      c.UnityOAuthenticator.tokeninfo_url = "https://unity-jsc.fz-juelich.de/jupyter-oauth2/tokeninfo"
      c.UnityOAuthenticator.userdata_url = "https://unity-jsc.fz-juelich.de/jupyter-oauth2/userinfo"
      c.UnityOAuthenticator.username_key = "username_attr"
      c.UnityOAuthenticator.scope = "single-logout;hpc_infos;x500;authenticator;eduperson_entitlement;username".split(";")
      c.UnityOAuthenticator.admin_users = "t.kreuzer@fz-juelich.de;a.grosch@fz-juelich.de".split(";")
      c.UnityOAuthenticator.post_auth_hook = unity.post_auth_hook

      from extra_handlers import (
          setuptunnel,
          unicorenotification,
          twoFA,
          direct,
          projects,
          vo,
          refresh_hpc_accounts,
          sites,
          loglevel,
      )
      from jupyterhub.handlers import pages

      c.JupyterHub.extra_handlers = [
          (
              r"/api/tunneling/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)",
              setuptunnel.SetupTunnelAPIHandler,
          ),
          (r"/api/loglevel/([^/]+)/([^/]+)", loglevel.LogLevelAPIHandler),
          (r"/api/vo/([^/]+)", vo.VOAPIHandler),
          (r"/api/votoken/([^/]+)", vo.VOTokenAPIHandler),
          (
              r"/api/unicorenotification/([^/]+)",
              unicorenotification.UNICORENotificationAPIHandler,
          ),
          (
              r"/api/unicorenotification/([^/]+)/([^/]+)",
              unicorenotification.UNICORENotificationAPIHandler,
          ),
          (
              r"/api/unicorenotification/([^/]+)/",
              unicorenotification.UNICORENotificationAPIHandler,
          ),
          (
              r"/api/unicorenotification/([^/]+)/([^/]+)/",
              unicorenotification.UNICORENotificationAPIHandler,
          ),
          (r"/api/2FA", twoFA.TwoFAAPIHandler),
          (r"/api/project_shares/([^/]+)/([^/]+)/([^/]+)", projects.ProjectSharesAPIHandler),
          (r"/api/project_shares/([^/]+)/([^/]+)", projects.ProjectSharesAPIHandler),
          (r"/api/project_shares/([^/]+)", projects.ProjectSharesAPIHandler),
          (r"/api/project_shares", projects.ProjectSharesAPIHandler),
          (r"/api/projects/([^/]+)/([^/]+)/([^/]+)", projects.ProjectsAPIHandler),
          (r"/api/projects/([^/]+)/([^/]+)", projects.ProjectsAPIHandler),
          (r"/api/projects/([^/]+)", projects.ProjectsAPIHandler),
          (r"/api/projects", projects.ProjectsAPIHandler),
          (r"/api/refreshhpc/([^/]+)", refresh_hpc_accounts.HPCUpdateHandler),
          (r"/direct/([^/]+)/([^/]+)", direct.DirectSpawnHandler),
          (r"/groups", vo.VOHandler),
          (r"/terms", sites.ToSHandler),
          (r"/imprint", sites.ImprintHandler),
          (r"/privacy", sites.DPSHandler),
          (r"/2FA", twoFA.TwoFAHandler),
          (r"/2FA/([^/]+)", twoFA.TwoFACodeHandler),
          (r"/signout", unity.BackendLogoutHandler),
          (r"/start", pages.HomeHandler),
      ]
  extraEnv:
  - name: LOGGING_STREAM_ENABLED
    value: "true"
  - name: LOGGING_STREAM_LOGLEVEL
    value: DEBUG
  - name: LOGGING_METRICS_ENABLED
    value: "true"
  - name: LOGGING_FILE_ENABLED
    value: "false"
  - name: LOGGING_FILE_LOGLEVEL
    value: ERROR
  - name: LOGGING_MAIL_ENABLED
    value: "false"
  - name: LOGGING_MAIL_RECEIVER
    value: a.grosch@fz-juelich.de
  - name: LOGGING_MAIL_HOST
    value: mail.fz-juelich.de
  - name: LOGGING_MAIL_FROM
    value: jupyter-jsc-log-analyze@fz-juelich.de
  - name: LOGGING_MAIL_SUBJECT
    value: Jupyter-JSC Log analyze Error
  - name: LOGGING_MAIL_LOGLEVEL
    value: CRITICAL
  - name: LOGGING_SYSLOG_ENABLED
    value: "true"
  - name: LOGGING_SYSLOG_LEVEL
    value: DEBUG
  - name: LOGGING_SYSLOG_FORMATTER
    value: json
  - name: LOGGING_SYSLOG_HOST
    value: 134.94.199.3
  - name: LOGGING_SYSLOG_PORT
    value: "5141"
  - name: LOGGING_SYSLOG_PROTOCOL
    value: udp
  - name: LOGGING_SYSLOG_MEMORY_ENABLED
    value: "false"
  - name: LOGGING_SYSLOG_MEMORY_CAPACITY
    value: "100"
  - name: LOGGING_SYSLOG_MEMORY_FLUSHLEVEL
    value: ERROR
  - name: RESOURCES_PATH
    value: /mnt/config/misc/resources.json
  - name: SYSTEMS_PATH
    value: /mnt/config/misc/systems.json
  - name: SERVICES_PATH
    value: /mnt/config/misc/services.json
  - name: DATA_FILES_PATH
    value: /mnt/config/jupyterhub/config/data
  - name: DEFAULT_PARTITIONS_PATH
    value: /mnt/config/jupyterhub/config/common/default_partitions.json
  - name: TUNNELING_IP
    value: 10.0.40.210
  - name: BACKEND_URL_TUNNEL
    value: http://backend:8080/api/tunnel
  - name: BACKEND_URL_LOGOUT
    value: http://backend:8080/api/logout
  - name: MAINTENANCE_MESSAGES_PATH
    value: /mnt/common/status-messages
  - name: MAINTENANCE_MESSAGES_SYSTEMS
    value: JURECA JUWELS JUSUF DEEP HDFML JUPYTER HDFCLOUD
  - name: RESERVATIONS_PATH
    value: /mnt/common/reservations/reservation_csv.json
  - name: MAINTENANCE_PATH
    value: /mnt/common/status-messages/maintenance.json
  - name: MAP_SYSTEMS_PATH
    value: /mnt/config/jupyterhub/config/common/map_systems.json
  - name: MAP_PARTITIONS_PATH
    value: /mnt/config/jupyterhub/config/common/map_partitions.json
  - name: GET_HPC_ACCOUNTS_SSH_TIMEOUT
    value: "3"
  - name: GET_HPC_ACCOUNTS_SSH_KEY
    value: /srv/keys/get-hpc-accounts
  - name: GET_HPC_ACCOUNTS_SSH_USER
    value: unicore
  - name: GET_HPC_ACCOUNTS_SSH_HOST
    value: zam2126.zam.kfa-juelich.de
  - name: TWOFA_SSH_KEY
    value: /srv/keys/activate-2fa
  - name: TWOFA_SSH_USER
    value: unity
  - name: TWOFA_SSH_HOST
    value: unity-jsc.fz-juelich.de
  - name: TWOFA_REMOVE_SSH_KEY
    value: /srv/keys/remove-2fa
  - name: TWOFA_REMOVE_SSH_USER
    value: unity
  - name: TWOFA_REMOVE_SSH_HOST
    value: unity-jsc.fz-juelich.de
  - name: VO_CONFIG_PATH
    value: /mnt/config/misc/vos.json
  - name: SEND2FA_CONFIG_PATH
    value: /mnt/config/jupyterhub/config/send_mail/config.json
  - name: TOKENINFO_URL
    value: https://unity-jsc.fz-juelich.de/jupyter-oauth2/tokeninfo
  - name: AUTH_SECRET
    valueFrom:
      secretKeyRef:
        key: auth_secret
        name: hub-secret-custom
  - name: JUPYTERHUB_CRYPT_KEY
    valueFrom:
      secretKeyRef:
        key: crypt_key
        name: hub-secret-custom
  - name: OAUTH_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        key: oauth_client_secret
        name: hub-secret-custom
  - name: JUPYTERHUB_DB_HOST
    value: jupyter-jsc-old-psql-postgresql-ha-pgpool.database.svc
  - name: JUPYTERHUB_DB_PORT
    value: "5432"
  - name: JUPYTERHUB_DB_USER
    value: jupyterhub
  - name: JUPYTERHUB_DB_DATABASE
    value: jupyterhub
  - name: JUPYTERHUB_DB_PASSWD
    valueFrom:
      secretKeyRef:
        key: sql_passwd
        name: hub-secret-custom
  - name: BACKEND_SECRET
    valueFrom:
      secretKeyRef:
        key: backend_secret
        name: backend-secret
  extraVolumeMounts:
  - mountPath: /mnt/config
    name: jhub-config
  - mountPath: /mnt/common
    name: jhub-common
  - mountPath: /mnt/logs
    name: jhub-logs
  - mountPath: /srv/keys
    name: jhub-keys
  extraVolumes:
  - name: jhub-config
    nfs:
      path: /nfs/jupyter-jsc-live/config
      server: 10.0.40.227
  - name: jhub-common
    nfs:
      path: /nfs/jupyter-jsc-live/common
      server: 10.0.40.227
  - name: jhub-logs
    nfs:
      path: /nfs/jupyter-jsc-live/logs/jupyterhub
      server: 10.0.40.227
  - name: jhub-keys
    persistentVolumeClaim:
      claimName: jupyterhub-keys-local
  - name: activate-2fa
    secret:
      defaultMode: 420
      secretName: activate-2fa
  - name: remove-2fa
    secret:
      defaultMode: 420
      secretName: remove-2fa
  - name: get-hpc-accounts
    secret:
      defaultMode: 420
      secretName: get-hpc-accounts
  image:
    name: jupyterjsc/jupyterhub
    tag: 1.3.0.15
  initContainers:
  - command:
    - sh
    - -c
    - cp /mnt/ssh_keys/activate-2fa/ssh-privatekey /srv/keys/activate-2fa && cp
      /mnt/ssh_keys/activate-2fa/ssh-publickey /srv/keys/activate-2fa.pub && cp
      /mnt/ssh_keys/remove-2fa/ssh-privatekey /srv/keys/remove-2fa && cp /mnt/ssh_keys/remove-2fa/ssh-publickey
      /srv/keys/remove-2fa.pub && cp /mnt/ssh_keys/get-hpc-accounts/ssh-privatekey
      /srv/keys/get-hpc-accounts && cp /mnt/ssh_keys/get-hpc-accounts/ssh-publickey
      /srv/keys/get-hpc-accounts.pub && chown -R 1091:100 /srv/keys && chmod 700
      /srv/keys && chmod 400 /srv/keys/* && mkdir -p /mnt/config/jupyterhub &&
      chown -R 1091:100 /mnt/config/jupyterhub && chown -R 1091:100 /mnt/logs
    image: alpine:3.13
    imagePullPolicy: IfNotPresent
    name: set-key-ownership
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /srv/keys
      name: jhub-keys
    - mountPath: /mnt/ssh_keys/activate-2fa
      name: activate-2fa
    - mountPath: /mnt/ssh_keys/remove-2fa
      name: remove-2fa
    - mountPath: /mnt/ssh_keys/get-hpc-accounts
      name: get-hpc-accounts
    - mountPath: /mnt/config
      name: jhub-config
    - mountPath: /mnt/logs
      name: jhub-logs
  labels:
    sidecar.istio.io/inject: "false"

proxy:
  labels:
    sidecar.istio.io/inject: "false"
  secretToken: fd0454d5aea3ced7cda6f5a5cca136b23f27a7885f22726f36eace5d9424cf0w9
  service:
    nodePorts:
      http: 30800
    type: NodePort

prePuller:
  annotations:
    sidecar.istio.io/inject: "false"
